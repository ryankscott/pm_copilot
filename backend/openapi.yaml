openapi: 3.0.0
info:
  title: PRD API
  version: 1.0.0
paths:
  /prds:
    get:
      summary: Get all PRDs
      responses:
        "200":
          description: A list of PRDs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PRD"
    post:
      summary: Create a new PRD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PRD"
      responses:
        "201":
          description: The created PRD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PRD"
  /prds/{id}:
    get:
      summary: Get a PRD by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The PRD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PRD"
        "404":
          description: PRD not found
    put:
      summary: Update a PRD by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PRD"
      responses:
        "200":
          description: The updated PRD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PRD"
        "404":
          description: PRD not found
    delete:
      summary: Delete a PRD by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
        "404":
          description: PRD not found
  /prds/{id}/generate:
    post:
      summary: Generate AI content for a PRD
      description: Generate content for a specific section of a PRD or enhance existing content using AI
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the PRD to generate content for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateContentRequest"
      responses:
        "200":
          description: Successfully generated content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateContentResponse"
        "400":
          description: Bad request - invalid input parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: PRD not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error - AI generation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /prds/{id}/critique:
    post:
      summary: Get AI critique and feedback for a PRD
      description: Analyze an existing PRD and provide detailed critique, suggestions, and improvement recommendations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the PRD to critique
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CritiqueRequest"
      responses:
        "200":
          description: Successfully generated critique
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CritiqueResponse"
        "400":
          description: Bad request - invalid input parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: PRD not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error - AI critique failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /test-provider:
    post:
      summary: Test LLM Provider Connection
      description: Test if a provider configuration is working correctly
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
              properties:
                provider:
                  $ref: "#/components/schemas/LLMProviderConfig"
                model:
                  type: string
                  description: Specific model to test
                  example: "gpt-4o-mini"
      responses:
        "200":
          description: Provider test successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the test was successful
                  provider:
                    type: string
                    description: The provider that was tested
                  model:
                    type: string
                    description: The model that was tested
                  responseTime:
                    type: number
                    format: float
                    description: Response time in seconds
                  message:
                    type: string
                    description: Success message
        "400":
          description: Bad request - invalid provider configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Provider test failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  provider:
                    type: string
                  model:
                    type: string
                  error:
                    type: string
                    description: Error message describing what went wrong
  /ollama/models:
    get:
      summary: Get available Ollama models
      description: Fetch the list of models available on the local Ollama instance
      parameters:
        - name: baseURL
          in: query
          required: false
          schema:
            type: string
            default: "http://localhost:11434"
          description: Base URL for the Ollama API
      responses:
        "200":
          description: Successfully retrieved available models
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LLMModel"
        "500":
          description: Failed to fetch models from Ollama
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/feedback/enhanced:
    post:
      summary: Submit enhanced feedback for a generation
      description: Submit feedback with rating and categories for a specific AI generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackRequest"
      responses:
        "200":
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackResponse"
        "400":
          description: Bad request - invalid feedback data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Failed to submit feedback
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    PRD:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GenerateContentRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
          description: The prompt or instruction for AI content generation
          example: "Generate a detailed user story for mobile app login feature"
        context:
          type: string
          description: Additional context to help with content generation
          example: "This is for a B2B SaaS application with enterprise security requirements"
        tone:
          type: string
          enum: ["professional", "casual", "technical", "executive"]
          default: "professional"
          description: The tone to use for generated content
        length:
          type: string
          enum: ["brief", "standard", "detailed", "comprehensive"]
          default: "standard"
          description: The desired length/detail level of generated content
        existing_content:
          description: Existing content to enhance or build upon
        conversation_history:
          type: array
          items:
            $ref: "#/components/schemas/ConversationMessage"
          description: Previous conversation messages for interactive sessions
        provider:
          $ref: "#/components/schemas/LLMProviderConfig"
          description: LLM provider configuration to use for generation
        model:
          type: string
          description: Specific model to use for generation
          example: "gpt-4o"
    CritiqueRequest:
      type: object
      properties:
        existing_content:
          description: Existing content to enhance or build upon
        focus_areas:
          type: array
          items:
            type: string
            enum:
              [
                "completeness",
                "clarity",
                "structure",
                "feasibility",
                "requirements",
                "user_experience",
                "technical",
                "business_value",
              ]
          description: Specific areas to focus the critique on
          example: ["completeness", "clarity", "requirements"]
        depth:
          type: string
          enum: ["overview", "detailed", "comprehensive"]
          default: "detailed"
          description: How detailed the critique should be
        include_suggestions:
          type: boolean
          default: true
          description: Whether to include specific improvement suggestions
        custom_criteria:
          type: string
          description: Any custom criteria or specific aspects to evaluate
          example: "Focus on security requirements and compliance considerations"
        provider:
          $ref: "#/components/schemas/LLMProviderConfig"
          description: LLM provider configuration to use for critique
        model:
          type: string
          description: Specific model to use for critique
          example: "gpt-4o"
    ConversationMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: ["user", "assistant"]
          description: The role of the message sender
        content:
          type: string
          description: The message content
        timestamp:
          type: string
          format: date-time
          description: When the message was sent
        input_tokens:
          type: integer
          description: Number of input tokens used (for assistant messages)
        output_tokens:
          type: integer
          description: Number of output tokens generated (for assistant messages)
        total_time:
          type: number
          format: float
          description: Time taken to generate the message in seconds (for assistant messages)
    GenerateContentResponse:
      type: object
      properties:
        generated_content:
          type: string
          description: The AI-generated content
        input_tokens:
          type: integer
          description: Number of input tokens used
        output_tokens:
          type: integer
          description: Number of output tokens generated
        tokens_used:
          type: integer
          description: Total number of tokens consumed
        model_used:
          type: string
          description: The AI model used for generation
          example: "gpt-4"
        generation_time:
          type: number
          format: float
          description: Time taken to generate content in seconds
        suggestions:
          type: array
          items:
            type: string
          description: Additional suggestions for improving the content
    CritiqueResponse:
      type: object
      properties:
        summary:
          type: string
          description: Executive summary of the critique
        input_tokens:
          type: integer
          description: Number of input tokens used
        output_tokens:
          type: integer
          description: Number of output tokens generated
        tokens_used:
          type: integer
          description: Total number of tokens consumed
        model_used:
          type: string
          description: The AI model used for critique
        generation_time:
          type: number
          format: float
          description: Time taken to generate critique in seconds
    LLMProviderConfig:
      type: object
      properties:
        type:
          type: string
          enum: ["openai", "anthropic", "google", "ollama"]
          description: The LLM provider type
        name:
          type: string
          description: Display name of the provider
        apiKey:
          type: string
          description: API key for the provider (if required)
        baseURL:
          type: string
          description: Base URL for the provider API (for custom deployments)
        isConfigured:
          type: boolean
          description: Whether the provider is properly configured
    LLMModel:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the model
        name:
          type: string
          description: Display name of the model
        description:
          type: string
          description: Description of the model's capabilities
        maxTokens:
          type: integer
          description: Maximum token limit for the model
        supportsStreaming:
          type: boolean
          description: Whether the model supports streaming responses
        costPer1MTokens:
          type: object
          properties:
            input:
              type: number
              format: float
              description: Cost per 1k input tokens
            output:
              type: number
              format: float
              description: Cost per 1k output tokens
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message describing what went wrong
        code:
          type: string
          description: Error code for programmatic handling
        details:
          type: object
          description: Additional error details
    FeedbackRequest:
      type: object
      required:
        - traceId
        - generationId
      properties:
        traceId:
          type: string
          description: Langfuse trace ID for the generation
          example: "trace_123456"
        generationId:
          type: string
          description: Langfuse generation ID for the specific response
          example: "gen_abcdef"
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: Rating from 1 (poor) to 5 (excellent)
          example: 4
        comment:
          type: string
          description: Optional text feedback
          example: "The response was helpful but could be more detailed"
        categories:
          type: array
          items:
            type: string
          description: Feedback categories
          example: ["helpful", "accurate", "clear"]
    FeedbackResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the feedback was successfully submitted
        message:
          type: string
          description: Response message
        analytics:
          type: object
          properties:
            traceId:
              type: string
              description: The trace ID that was rated
            generationId:
              type: string
              description: The generation ID that was rated
            rating:
              type: integer
              description: The rating that was submitted
            categoriesCount:
              type: integer
              description: Number of categories selected
          description: Analytics data for the submitted feedback
    LangfuseData:
      type: object
      properties:
        traceId:
          type: string
          description: Langfuse trace ID
        generationId:
          type: string
          description: Langfuse generation ID
        userId:
          type: string
          description: User ID associated with the generation
        sessionId:
          type: string
          description: Session ID for the generation
        metadata:
          type: object
          description: Additional metadata for the generation
